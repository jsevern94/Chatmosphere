<div class="text-2xl pb-12" id="messages" style="font-family: 'McLaren', cursive;"></div>
<form action="" id="chat" class="fixed bottom-0">
    <input id="m"  autocomplete="off" /><button>Send</button>
</form>
<p
    class="bg-green-200 bg-blue-200 flex w-2/12 md:w-2/5 lg:w-3/5 border-black rounded-lg px-3 py-2 mr-10 ml-10 mt-4 flex-shrink-0 hidden bg-fixed z-10">
</p>
<script src="/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-1.11.1.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notify/0.4.2/notify.js"></script>
<script>
    $(document).ready(function () {

        var messages = [];

        var user = '{{{user}}}'

        var partner = '{{{partner}}}'

        getMessages();

        function initializeMessages(arr) {
            for (var i = 0; i < arr.length; i++) {
                if (arr[i].sender.toLowerCase() == user.toLowerCase()) {
                    var newMessage = $("<div>").addClass("flex flex-row-reverse");
                    newMessage.append($("<div>").text(arr[i].content).addClass("bg-green-200 px-3 py-2 mr-10 mt-4 rounded-lg border-black shadow-lg z-10"));
                    newMessage.append($("<div>").addClass("w-2/12 md:w-2/5 lg:w-3/5 flex-shrink-0"));
                    $("#messages").append(newMessage);
                }
                else if (arr[i].sender.toLowerCase() == partner.toLowerCase()) {
                    var newMessage = $("<div>").addClass("flex");
                    newMessage.append($("<div>").text(arr[i].content).addClass("bg-blue-200 px-3 py-2 ml-10 mt-4 rounded-lg border-black shadow-lg z-10"));
                    newMessage.append($("<div>").addClass("w-2/12 md:w-2/5 lg:w-3/5 flex-shrink-0"));
                    $("#messages").append(newMessage);
                }
            }
            window.scrollTo(0, document.body.scrollHeight);
        }

        function getMessages() {
            $.get("/api/chat/" + partner, function (data) {
                messages = data;
                initializeMessages(messages);
            });
        }

        $(function () {
            var socket = io();
            $('form').submit(function (e) {
                e.preventDefault();
                if ($('#m').val()) {
                    var messageData = {
                        sender: user,
                        receiver: partner,
                        content: $('#m').val().trim(),
                    }

                    socket.emit('chat message', messageData);
                    $.post('/api/messages', messageData);
                    $('#m').val('');
                    return false;
                }
            });
            socket.on('new message', function (msg) {
                if ((msg.sender.toLowerCase() == user.toLowerCase() && msg.receiver.toLowerCase() == partner.toLowerCase())) {
                    var newMessage = $("<div>").addClass("flex flex-row-reverse");
                    newMessage.append($("<div>").text(msg.content).addClass("bg-green-200 px-3 py-2 mr-10 mt-4 rounded-lg border-black shadow-lg z-10 slide-in-blurred-right"));
                    newMessage.append($("<div>").addClass("w-2/12 md:w-2/5 lg:w-3/5 flex-shrink-0"));
                    $("#messages").append(newMessage);
                    window.scrollTo(0, document.body.scrollHeight);
                }
                else if ((msg.sender.toLowerCase() == partner.toLowerCase() && msg.receiver.toLowerCase() == user.toLowerCase())) {
                    var newMessage = $("<div>").addClass("flex");
                    newMessage.append($("<div>").text(msg.content).addClass("bg-blue-200 px-3 py-2 ml-10 mt-4 rounded-lg border-black shadow-lg z-10 slide-in-blurred-left"));
                    newMessage.append($("<div>").addClass("w-2/12 md:w-2/5 lg:w-3/5 flex-shrink-0"));
                    $("#messages").append(newMessage);
                    window.scrollTo(0, document.body.scrollHeight);
                }
                if ((msg.sender.toLowerCase() != partner.toLowerCase() && msg.receiver.toLowerCase() == user.toLowerCase())) {
                    showtoast(`You have a new message from ${msg.sender}`, `/chat/${msg.sender}`);
                }
            });
        });
        function ToastBuilder(options) {
            // options are optional
            var opts = options || {};

            // setup some defaults
            opts.defaultText = opts.defaultText || 'default text';
            opts.displayTime = opts.displayTime || 5000;
            opts.target = opts.target || 'body';

            return function (text, link) {
                $('<a>')
                    .attr("href", link)
                    .addClass('toast rounded-full')
                    .prependTo($(opts.target))
                    .text(text || opts.defaultText)
                    .queue(function (next) {
                        $(this).css({
                            'opacity': 1
                        });
                        var topOffset = 15;
                        $('.toast').each(function () {
                            var $this = $(this);
                            var height = $this.outerHeight();
                            var offset = 15;
                            $this.css('top', topOffset + 'px');

                            topOffset += height + offset;
                        });
                        next();
                    })
                    .delay(opts.displayTime)
                    .queue(function (next) {
                        var $this = $(this);
                        var width = $this.outerWidth() + 20;
                        $this.css({
                            'right': '-' + width + 'px',
                            'opacity': 0
                        });
                        next();
                    })
                    .delay(600)
                    .queue(function (next) {
                        $(this).remove();
                        next();
                    });
            };
        }
        var myOptions = {
            defaultText: 'Toast, yo!',
            displayTime: 5000,
            target: 'body'
        };
        var showtoast = new ToastBuilder(myOptions)
    })
</script>

<style>
    body {
        background-image: url("../images/background3.jpg") !important;
    }
</style>